{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountName": {
            "type": "string",
            "defaultValue": "sadelo003poc1",
            "metadata": {
                "description": "description"
            }
        },
        "portalName": {
            "type": "string",
            "defaultValue": "[uniqueString(resourceGroup().id)]",
            "metadata": {
                "description": "The name of the app to create."
            }
        },
        "apiName": {
            "type": "string",
            "defaultValue": "da-webapi-poc",
            "metadata": {
                "description": "The name of the app to create."
            }
        },
        "appServicePlanName": {
            "type": "string",
            "defaultValue": "[uniqueString(subscription().subscriptionId)]",
            "metadata": {
                "description": "The name of the app service plan to create."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location in which all resources should be deployed."
            }
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "defaultValue": "deloadmin",
            "metadata": {
                "description": "The admin user of the SQL Server"
            }
        },
        "sqlAdministratorLoginPassword": {
            "type": "securestring",
            "defaultValue": "Terafru5",
            "metadata": {
                "description": "The password of the admin user of the SQL Server"
            }
        }
    },
    "variables": {
        "vnetName": "vnet",
        "vnetAddressPrefix": "10.0.0.0/16",
        "subnetNameApps": "myappservice",
        "subnetNameData": "mydataservice",
        "subnetAppsAddressPrefix": "10.0.0.0/24",
        "subnetDataAddressPrefix": "10.0.1.0/24",
        "appInsightsNamePortal": "[concat(parameters('portalName'), '-app-insights')]",
        "appInsightsNameApi": "[concat(parameters('apiName'), '-app-insights')]",
        "appServicePlanSku": "S1",
        "sqlserverName": "[concat('sqlserver', uniqueString(resourceGroup().id))]",
        "databaseName": "sampledb"
    },
    "resources": [
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[variables('vnetName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetNameApps')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetAppsAddressPrefix')]",
                             "serviceEndpoints": [                                            
                                            {
                                                "service": "Microsoft.KeyVault",
                                                "locations": [
                                                    "*"
                                                ]
                                            },
                                            {
                                                "service": "Microsoft.ServiceBus",
                                                "locations": [
                                                    "*"
                                                ]
                                            },
                                            {
                                                "service": "Microsoft.Sql",
                                                "locations": [
                                                    "westeurope"
                                                ]
                                            },
                                            {
                                                "service": "Microsoft.Storage",
                                                "locations": [
                                                    "westeurope",
                                                    "northeurope"
                                                ]
                                            }
                                        ],
                            "delegations": [
                                {
                                    "name": "AppsSubnet",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverFarms"
                                       
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "[variables('subnetNameData')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetDataAddressPrefix')]",
                            "delegations": [
                                {
                                    "name": "DataSubnet",
                                    "properties": {
                                        "serviceName": "Microsoft.Web/serverFarms"
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2020-02-02-preview",
            "type": "microsoft.insights/components",
            "name": "[variables('appInsightsNamePortal')]",
            "location": "[parameters('location')]",
            "properties": {
                "ApplicationId": "[variables('appInsightsNamePortal')]",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
        },
        {
            "apiVersion": "2020-02-02-preview",
            "type": "microsoft.insights/components",
            "name": "[variables('appInsightsNameApi')]",
            "location": "[parameters('location')]",
            "properties": {
                "ApplicationId": "[variables('appInsightsNameApi')]",
                "Request_Source": "IbizaWebAppExtensionCreate"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_RAGRS"
            },
            "kind": "StorageV2",
            "properties": {
                "supportsHttpsTrafficOnly": true,
                "accessTier": "Hot",
                 "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                        {
                            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('vnetName'), variables('subnetNameApps'))]",
                            "action": "Allow",
                            "state": "Succeeded"
                        }
                    ],
                    "ipRules": [],
                    "defaultAction": "Deny"
                },
                "encryption": {
                    "services": {
                        "blob": {
                            "enabled": true
                        },
                        "file": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {

            "name": "[variables('sqlserverName')]",
            "type": "Microsoft.Sql/servers",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "SqlServer"
            },
            "apiVersion": "2018-06-01-preview",
            "properties": {
                "administratorLogin": "[parameters('sqlAdministratorLogin')]",
                "administratorLoginPassword": "[parameters('sqlAdministratorLoginPassword')]",
                "version": "12.0"
            },
            "resources": [
                {
                    "name": "[variables('databaseName')]",
                    "type": "databases",
                    "location": "[parameters('location')]",
                    "tags": {
                        "displayName": "Database"
                    },
                    "apiVersion": "2018-06-01-preview",
                    "dependsOn": [
                        "[variables('sqlserverName')]"
                    ],
                    "properties": {
                        "edition": "Basic",
                        "collation": "SQL_Latin1_General_CP1_CI_AS",
                        "maxSizeBytes": "1073741824",
                        "requestedServiceObjectiveName": "Basic"
                    }
                },
                {
                    "type": "firewallrules",
                    "apiVersion": "2018-06-01-preview",
                    "dependsOn": [
                        "[variables('sqlserverName')]"
                    ],
                    "location": "[parameters('location')]",
                    "name": "AllowAllWindowsAzureIps",
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                },
                {
                    "apiVersion": "2020-02-02-preview",
                    "type": "virtualNetworkRules",
                    "name": "[concat('allow-access-from-', variables('subnetNameApps'))]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers/', variables('sqlServerName'))]",
                         "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
                    ],
                    "properties": {
                        "virtualNetworkSubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('vnetName'), variables('subnetNameApps'))]"
                    }
                }
            ]
        }, 
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2019-08-01",
            "name": "[parameters('appServicePlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[variables('appServicePlanSku')]"
            },
            "kind": "app"
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2019-08-01",
            "name": "[parameters('portalName')]",
            "location": "[parameters('location')]",
            "kind": "app",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverFarms', parameters('appServicePlanName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', parameters('appServicePlanName'))]"
            },
            "resources": [
                {
                    "name": "virtualNetwork",
                    "type": "networkConfig",
                    "apiVersion": "2019-08-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('portalName'))]"
                    ],
                    "properties": {
                        "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetNameApps'))]",
                        "swiftSupported": true
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2019-08-01",
            "name": "[parameters('apiName')]",
            "location": "[parameters('location')]",
            "kind": "app",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverFarms', parameters('appServicePlanName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', parameters('appServicePlanName'))]",
                "siteConfig": {
                    "http20Enabled": "true",
                    "minTlsVersion": "1.2",
                    "ipSecurityRestrictions": [
                        {
                            "vnetSubnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets/', variables('vnetName'), variables('subnetNameApps'))]",
                            "action": "Allow",
                            "tag": "Default",
                            "priority": 200,
                            "name": "appSubnet",
                            "description": "Isolate traffic to subnet containing app services"
                        }
                    ]
                },
                "httpsOnly": true
            },
            "resources": [
                {
                    "name": "virtualNetwork",
                    "type": "networkConfig",
                    "apiVersion": "2019-08-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('apiName'))]"
                    ],
                    "properties": {
                        "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('subnetNameApps'))]",
                        "swiftSupported": true
                    }
                }
            ]
        }
    ]
}